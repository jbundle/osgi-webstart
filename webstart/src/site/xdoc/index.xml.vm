<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Auto Web Start Web Bundle</title>
    <author email="don@donandann.com">Don Corley</author>
  </properties>

  <!-- Optional HEAD element, which is copied as is into the XHTML <head> element -->
  <!-- head>
    <meta content=""/>
  </head -->

  <body>

     <section name="Description">

  <p><strong>Auto Web Start</strong> simplifies launching
  your java applications from a web browser.</p>

<p>
Just install your jars in a web server, provide the main class name and <b>Auto Web Start</b> will figure out the rest.
</p>
<p>
Here's how it works:<br/>
<strong>Auto Web Start</strong> works like OSGi. You tell it what program to run and all the dependencies are
automatically loaded and linked.<br/>
First, install your jars in a web server. An OSGi manifest is automatically created for each jar, detailing
what packages the jar contains and what external packages are required to run.
When you are ready to run your application or applet from a web browser, <b>Auto Web Start</b> converts these
dependencies to a web start jnlp file. It also does a pack200/gzip compression that can reduce your download
size by an order of magnitude.
</p>
<p>
All you have to do is specify the main java class in your url. For example, to run a program in a web page:<br/>
<code>
<a href="/webstart?applet=org.jbundle.util.biorhythm.Biorhythm">http://www.jbundle.org/webstart?applet=org.jbundle.util.biorhythm.Biorhythm</a><br/>
</code>
To run a program as a stand-alone application:<br/>
<code>
<a href="/webstart?mainClass=org.jbundle.util.biorhythm.Biorhythm">http://www.jbundle.org/webstart?mainClass=org.jbundle.util.biorhythm.Biorhythm</a><br/>
</code>
<strong>Auto Web Start</strong> takes care of all the Web Start configuration. It even automatically
updates the jnlp and java jar files when you update your application.
</p>

    </section>
      <section name="Usage Information">
<p>
<ul>
<li><a href="example.html">Example</a> (Under 2 minutes).</li>
<li><a href="usage.html">Web Bundle Usage information.</a> (API and servlet parameters)</li>
<li><a href="install.html">Installation.</a></li>
<li><a href="browser.html">Browser integration.</a></li>
<li><a href="javafx.html">JavaFX deployment.</a></li>
<li><a href="dev.html">Developers - Integrating your application with auto-webstart.</a></li>
<li><a href="signed.html">Developers - Using auto-webstart with signed jars.</a></li>
</ul>
</p>

<subsection name="OSGi packaging">
<p>
<strong>jbundle Auto Web Start</strong> is an <a href="http://www.osgi.org">OSGi</a> bundle.
To use it in your OSGi project, just install and start this bundle in your OSGi environment.
Of course your will need to start a web server also.
</p>
<p>
<code>
jbundle OBR Repository index: <a href="${project.organization.url}/repository/repository.xml">${project.organization.url}/repository/repository.xml</a><!-- ${OBRRepositoryIndex} --><br/>

Import-Package: ${project.artifactId};resolution:=optional;version=${project.version}
</code>
</p>
</subsection>

<subsection name="Maven Integration">
<p>
The <strong>jbundle Auto Web Start Web Bundle</strong> is a standard <a href="http://maven.apache.org/">Maven</a> artifact. Here is its dependency information:
</p>
<p>
<source>
&lt;dependency&gt;<br/>
&#160;&#160;&lt;groupId&gt;${project.groupId}&lt;/groupId&gt;<br/>
&#160;&#160;&lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;<br/>
&#160;&#160;&lt;version&gt;${project.version}&lt;/version&gt;<br/>
&lt;/dependency&gt;<br/>
</source>
</p>

</subsection>

</section>

  </body>

</document>
