<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Auto Web Start Web Bundle</title>
    <author email="don@donandann.com">Don Corley</author>
  </properties>

  <!-- Optional HEAD element, which is copied as is into the XHTML <head> element -->
<!-- head>
<meta />
</head  -->

  <body>

     <section name="JavaFX Web deployment examples">
        <p>
        <b>Auto Web Start</b> is perfect for deploying JavaFX programs. Besides simplifying the deploy process, your jars are automatically packed and gziped
        for quick downloads. You can run a JavaFX <b>Application</b> or a JavaFX
        <b>Applet</b> just by supplying the main class name.
        <b>Auto Web Start</b> has pre-build jnlp templates, or you can supply your own.
        </p>
        <p>
        For this example, we'll use a very simple javafx program. You can find it here in
        <a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.jbundle.javafx.example.helloworld%22">maven central</a>.
        </p>
        <p>
        Click here to launch this program as a JavaFX <b>application</b>:<br/>
        <code><a href="/webstart/docs/javafx.html?appletClass=org.jbundle.javafx.example.helloworld.HelloWorldJavaFXApp">http://www.jbundle.org/webstart/docs/javafx.html?appletClass=org.jbundle.javafx.example.helloworld.HelloWorldJavaFXApp</a></code><br/>
        <i>(this uses the default javafx template: docs/javafx.jnlp)</i><br/>
        You can also launch this program as a JavaFX <b>applet</b>:<br/>
        <code><a href="/webstart/docs/applet.html?appletClass=org.jbundle.javafx.example.helloworld.HelloWorldJavaFX&amp;template=docs/javafxapplet.jnlp">http://www.jbundle.org/webstart/docs/applet.html?appletClass=org.jbundle.javafx.example.helloworld.HelloWorldJavaFX&amp;template=docs/javafxapplet.jnlp</a></code><br/>
        </p>
        <p>
        If you want to deploy JavaFX jars that were not packaged with an OSGi manifest, just use the wrap protocol to automatically generate a manifest.<br/>
        For example, for a regular java jar file, in karaf, I would type:<br/>
        <code>install wrap:file:///home/don/workspace/workspace/jbundle/javafx/helloworld/target/org.jbundle.javafx.example.helloworld-${project.version}.jar</code><br/>
        and I'm ready to run the application from a browser with the same command that we used in the first example. 
        </p>
        <p>
        Since the Auto webstart servlet has access to OSGi resources, you can package your startup parameters and/or jnlp template in your project's jar file.
        For example take a look at the url on
        <a href="http://www.jbundle.org/webstart/docs/applet.html?webStartPropertiesFile=org/jbundle/javafx/example/helloworld/javafx.properties">this sample</a>.
        The applet's params come from the sample appplication's jar file.
        </p>
        <p>
        Here's a more complicated example. We'll use the JavaFX ensemble example. I made a <a href="https://github.com/jbundle/javafx/commit/2a3118a1475fc0bbe2d4bc489bc34c3c4b659877">few minor adjustments</a> to the app
        so it will run in the Java sandbox.
        First, install our example and it's dependencies after <a href="install.html#Apache_Karaf">installing auto web start</a> in apache karaf:<br/>
        <code>
        # install the ensemble application and the dependent jars<br/> 
        osgi:install wrap:mvn:org.apache.lucene/lucene-grouping/3.2.0<br/>
        osgi:install wrap:mvn:org.apache.lucene/lucene-core/3.2.0<br/>
        osgi:install wrap:mvn:org.jbundle.javafx.example/org.jbundle.javafx.example.ensemble<br/>
        </code>
        Now, start this example in your browser: 
        <a href="http://localhost:8181/webstart/docs/javafx.html?appletClass=ensemble.Ensemble2">http://localhost:8181/webstart/docs/javafx.html?appletClass=ensemble.Ensemble2</a>.
        Ignore the sandbox warning and try the samples.
        </p>
    </section>

  </body>

</document>
